name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: mac
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Build Python service executable
        run: |
          echo "Building Python service for ${{ matrix.platform }}..."
          echo "Current directory: $(pwd)"
          echo "Checking for spec file:"
          ls -la covenantrix-service.spec
          pyinstaller covenantrix-service.spec --noconfirm --clean
          echo "Build completed. Checking output..."
          if [ -d "dist" ]; then
            ls -la dist/
            # Create python-dist directory to avoid conflict with Electron Builder
            mkdir -p python-dist
            if [ "${{ matrix.platform }}" == "win" ]; then
              if [ -f "dist/covenantrix-service.exe" ]; then
                echo "✅ Windows executable created successfully"
                mv dist/covenantrix-service.exe python-dist/
              else
                echo "❌ Windows executable not found"
                exit 1
              fi
            else
              if [ -f "dist/covenantrix-service" ]; then
                echo "✅ Unix executable created successfully"
                mv dist/covenantrix-service python-dist/
              else
                echo "❌ Unix executable not found"
                exit 1
              fi
            fi
            # Clean up PyInstaller dist to avoid conflicts
            rm -rf dist/
            echo "Python executable moved to python-dist/"
            ls -la python-dist/
          else
            echo "❌ No dist directory found"
            exit 1
          fi
        shell: bash
        
      - name: Verify Python executable before build
        run: |
          echo "=== Verifying Python executable is ready for Electron Builder ==="
          if [ -d "python-dist" ]; then
            echo "✅ python-dist directory exists"
            ls -la python-dist/
            # Ensure executable permissions on Unix platforms
            if [ "${{ matrix.platform }}" != "win" ]; then
              chmod +x python-dist/covenantrix-service
              echo "✅ Set executable permissions for Unix platform"
            fi
          else
            echo "❌ python-dist directory missing - Electron Builder will fail"
            exit 1
          fi
        shell: bash
        
      - name: Build application
        run: npm run build:${{ matrix.platform }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          
      - name: Debug - List dist contents
        run: |
          echo "=== Dist directory contents ==="
          if [ -d "dist" ]; then
            ls -la dist/
          else
            echo "No dist directory found"
          fi
        shell: bash
        
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: covenantrix-${{ matrix.platform }}
          path: dist/
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: covenantrix-win
          path: dist-win/
          
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: covenantrix-mac
          path: dist-mac/
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist-win/*.exe
            dist-mac/*.dmg
            dist-win/latest*.yml
            dist-mac/latest*.yml
          generate_release_notes: true
          make_latest: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
