# GitHub Actions workflow for continuous integration
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']
        node-version: ['16', '18']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio black isort flake8 mypy
          
      - name: Lint Python code
        run: |
          black --check core-rag-service/
          isort --check-only core-rag-service/
          flake8 core-rag-service/ --count --select=E9,F63,F7,F82 --show-source --statistics
          
      - name: Type check Python code
        run: |
          mypy core-rag-service/src/ --ignore-missing-imports
          
      - name: Test Python service
        run: |
          cd core-rag-service
          python -m pytest tests/ -v --tb=short
          
      - name: Install Node dependencies
        run: npm ci
        
      - name: Lint Node.js/Electron code
        run: npm run lint || echo "No lint script found, skipping"
        
      - name: Test build process
        run: |
          npm run build || echo "Testing build process"
          
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install security scanning tools
        run: |
          pip install --upgrade pip
          pip install safety bandit
          
      - name: Run safety check on Python dependencies
        run: |
          pip install -r requirements.txt
          safety check
          
      - name: Run bandit security linter
        run: |
          bandit -r core-rag-service/ -f json || echo "Bandit scan completed"
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Node dependencies and audit
        run: |
          npm ci
          npm audit --audit-level moderate
